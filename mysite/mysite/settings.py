"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%9lr$twq3b@f53km1s&1iafp1re$kr-2)_0ba04xl@szqgr^lt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

DATA_UPLOAD_MAX_NUMBER_FIELDS = None
DATA_UPLOAD_MAX_MEMORY_SIZE = 50242880
# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',  # 新添加的应用
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'  # 设置为简体中文，其中 zh-Hans是简体中文，zh-Hant是繁体中文
"""
默认： 'en-us'

表示此安装的语言代码的字符串。这应该是标准语言ID格式。例如，美国英语是"en-us"。另请参阅语言标识符列表以及 国际化和本地化。

USE_I18N 必须激活此设置才能生效。

它有两个目的：

如果未使用区域设置中间件，则会决定向所有用户提供哪种翻译。
如果区域设置中间件处于活动状态，则它会提供后备语言，以防用户的首选语言无法确定或网站不支持。当用户的首选语言不存在给定文字的翻译时，它还提供后备翻译。

"""

TIME_ZONE = 'Asia/Shanghai'  # 设置时区， 时区列表：https://en.wikipedia.org/wiki/List_of_tz_database_time_zones

USE_I18N = True   # 默认： True一个布尔值，指定是否应启用Django的翻译系统。这提供了一种简单的方法来关闭它，以提高性能。如果设置为 False，Django将进行一些优化，以便不加载翻译机制。
# https://docs.djangoproject.com/en/2.1/ref/settings/#std:setting-TIME_ZONE

USE_L10N = True  # 默认： False  一个布尔值，指定默认情况下是否启用数据的本地化格式。如果设置为True，例如Django将使用当前语言环境的格式显示数字和日期。

USE_TZ = True  # 默认： False 一个布尔值，指定默认情况下日期时间是否为时区感知。如果设置为True，Django将在内部使用时区感知日期时间。否则，Django将在当地时间使用天真的日期时间。


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
